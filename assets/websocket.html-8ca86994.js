import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,a as n,b as s,e as i,w as l,d as a}from"./app-531015dd.js";const u={},r=a(`<h2 id="基本介绍" tabindex="-1"><a class="header-anchor" href="#基本介绍" aria-hidden="true">#</a> 基本介绍</h2><h3 id="前端发送数据格式" tabindex="-1"><a class="header-anchor" href="#前端发送数据格式" aria-hidden="true">#</a> 前端发送数据格式</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src\\utils\\websocket.ts</span>
<span class="token function">sendSocketMsg</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> data<span class="token operator">?</span><span class="token operator">:</span> Recordable<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>event: 事件类型，与后端保持一致，在 <code>src\\constants\\socket.ts</code> 中定义</li><li>data: 事件数据，可选</li></ul><h3 id="后端返回数据格式" tabindex="-1"><a class="header-anchor" href="#后端返回数据格式" aria-hidden="true">#</a> 后端返回数据格式</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src\\constants\\socket.ts</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">SocketMsg</span> <span class="token punctuation">{</span>
  event<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  code<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  data<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  errorMsg<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  timestamp<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例" aria-hidden="true">#</a> 使用示例</h2><h3 id="定义事件类型" tabindex="-1"><a class="header-anchor" href="#定义事件类型" aria-hidden="true">#</a> 定义事件类型</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src\\constants\\socket.ts</span>
<span class="token keyword">export</span> <span class="token keyword">enum</span> SocketEnum <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  EventAdminMonitorTrends <span class="token operator">=</span> <span class="token string">&quot;admin/monitor/trends&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),d={class:"hint-container warning"},k=n("p",{class:"hint-container-title"},"注意",-1),v=n("code",null,"模块/控制器/方法",-1),m=n("br",null,null,-1),b=a(`<h3 id="上行消息发送" tabindex="-1"><a class="header-anchor" href="#上行消息发送" aria-hidden="true">#</a> 上行消息发送</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> SocketMsg <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/constants/socket&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> sendSocketMsg <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/utils/websocket&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> trendInterval<span class="token operator">:</span> NodeJS<span class="token punctuation">.</span>Timeout <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

  <span class="token comment">// 每隔2秒向后端请求最新数据</span>
  <span class="token function">sendSocketMsg</span><span class="token punctuation">(</span>SocketEnum<span class="token punctuation">.</span>EventAdminMonitorTrends<span class="token punctuation">)</span><span class="token punctuation">;</span>

  trendInterval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">sendSocketMsg</span><span class="token punctuation">(</span>SocketEnum<span class="token punctuation">.</span>EventAdminMonitorTrends<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">onUnmounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>trendInterval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">clearInterval</span><span class="token punctuation">(</span>trendInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="下行消息监听" tabindex="-1"><a class="header-anchor" href="#下行消息监听" aria-hidden="true">#</a> 下行消息监听</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> SocketMsg <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/constants/socket&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> registerSocketMsgHandler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/utils/websocket&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">onAdminMonitor</span> <span class="token operator">=</span> <span class="token punctuation">(</span>msg<span class="token operator">:</span> SocketMsg<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 监听后端推送的数据，注意判断事件类型，因为这里会监听到所有的事件</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>event <span class="token operator">===</span> SocketEnum<span class="token punctuation">.</span>EventAdminMonitorTrends<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>code <span class="token operator">!==</span> SocketEnum<span class="token punctuation">.</span>CodeOk<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">查询出错:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>msg<span class="token punctuation">.</span>event<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>msg<span class="token punctuation">.</span>errorMsg<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    dataSource<span class="token punctuation">.</span>value <span class="token operator">=</span> msg<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 注册事件监听</span>
<span class="token comment">// 注意：这里的事件监听会在组件销毁时自动注销</span>
<span class="token function">registerSocketMsgHandler</span><span class="token punctuation">(</span>onAdminMonitor<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function g(h,f){const t=p("RouterLink");return o(),c("div",null,[r,n("div",d,[k,n("p",null,[s("为保持事件类型的唯一性，请定义事件类型，与后端保持一致，使用 "),v,s(" 的格式。"),m,i(t,{to:"/backend/component/websocket.html#%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E5%99%A8%E6%B3%A8%E5%86%8C"},{default:l(()=>[s("后端事件监听器注册")]),_:1})])]),b])}const _=e(u,[["render",g],["__file","websocket.html.vue"]]);export{_ as default};
